\contentsline {chapter}{\numberline {1\ignorespaces \hspace {0.3em}}介绍}{1}{chapter.1}
\contentsline {chapter}{\numberline {2\ignorespaces \hspace {0.3em}}代码插入与劫持技术分析}{3}{chapter.2}
\contentsline {section}{\numberline {2.1}关于ELF格式的讨论}{3}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}ELF文件类型}{3}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}链接视图与执行视图}{3}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}文件空间和地址空间}{6}{subsection.2.1.3}
\contentsline {section}{\numberline {2.2}ELF插入技术分析}{7}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}利用nop指令串插入代码}{7}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}在代码段的最后分区插入代码}{8}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}在代码段之前插入代码}{10}{subsection.2.2.3}
\contentsline {section}{\numberline {2.3}二进制程序劫持技术分析}{12}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}修改ELF文件入口点}{12}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}在函数头增加跳转}{15}{subsection.2.3.2}
\contentsline {subsection}{\numberline {2.3.3}通过篡改动态链接数据结构}{16}{subsection.2.3.3}
\contentsline {chapter}{\numberline {3\ignorespaces \hspace {0.3em}}VxWorks代码插入方案分析与设计}{18}{chapter.3}
\contentsline {section}{\numberline {3.1}VxWorks镜像文件格式}{18}{section.3.1}
\contentsline {section}{\numberline {3.2}VxWorks运行时内存布局}{19}{section.3.2}
\contentsline {section}{\numberline {3.3}VxWorks代码插入方案设计}{20}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}利用nop指令串插入}{20}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}通过扩展.bss节进行插入}{21}{subsection.3.3.2}
\contentsline {chapter}{\numberline {4\ignorespaces \hspace {0.3em}}代码劫持方案的分析与设计}{23}{chapter.4}
\contentsline {section}{\numberline {4.1}VxWorks系统镜像种类}{23}{section.4.1}
\contentsline {section}{\numberline {4.2}VxWorks系统启动调用流程}{24}{section.4.2}
\contentsline {section}{\numberline {4.3}VxWorks下代码劫持方案设计}{25}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}直接跳转及其可行性证明}{25}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}间接跳转及其可行性证明}{27}{subsection.4.3.2}
\contentsline {subsection}{\numberline {4.3.3}两种方案的对比和分析}{28}{subsection.4.3.3}
\contentsline {chapter}{\numberline {5\ignorespaces \hspace {0.3em}}实例：mini-notify——代码插入与函数劫持在VxWorks中的实现}{30}{chapter.5}
\contentsline {section}{\numberline {5.1}背景}{30}{section.5.1}
\contentsline {subsection}{\numberline {5.1.1}Linux下的文件监控系统inotify介绍}{30}{subsection.5.1.1}
\contentsline {subsection}{\numberline {5.1.2}VxWorks下的dosFs文件系统}{30}{subsection.5.1.2}
\contentsline {section}{\numberline {5.2}mini-notify的目标}{31}{section.5.2}
\contentsline {section}{\numberline {5.3}环境搭建与配置}{32}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}Linux主机}{32}{subsection.5.3.1}
\contentsline {subsection}{\numberline {5.3.2}Windows主机与VxWorks虚拟机}{32}{subsection.5.3.2}
\contentsline {section}{\numberline {5.4}mini-notify方案设计}{33}{section.5.4}
\contentsline {subsection}{\numberline {5.4.1}劫持位置选择}{33}{subsection.5.4.1}
\contentsline {subsection}{\numberline {5.4.2}函数劫持方案}{34}{subsection.5.4.2}
\contentsline {subsection}{\numberline {5.4.3}代码插入方案}{34}{subsection.5.4.3}
\contentsline {section}{\numberline {5.5}mini-notify的实现}{35}{section.5.5}
\contentsline {section}{\numberline {5.6}测试与评价}{35}{section.5.6}
\contentsline {chapter}{结论}{37}{chapter*.31}
\contentsline {chapter}{参考文献}{38}{section*.32}
\contentsline {chapter}{\numberline {附录\nobreakspace {}A\hspace {0.3em}}ELF注入工具源代码}{39}{appendix.A}
\contentsline {chapter}{\numberline {附录\nobreakspace {}B\hspace {0.3em}}实现文件监控功能的源代码}{42}{appendix.B}
\contentsfinish 
